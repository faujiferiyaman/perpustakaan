/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.tubes.perpus;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;

/**
 *
 * @author Unknown
 */
public class formBorrow extends javax.swing.JFrame {

    /**
     * Creates new form bukuForm
     */
    public formBorrow(Integer... memberId) {
        initComponents();
        viewComboBox();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width / 2 - this.getSize().width / 2, dim.height / 2 - this.getSize().height / 2);

        mainMenuEmployee mm = new mainMenuEmployee();
        if (mm.edit) {
            btnUpdate.setVisible(true);
            btnAdd.setVisible(false);
            this.setTitle("Edit Data Pinjam");
        } else {
            btnUpdate.setVisible(false);
            btnAdd.setVisible(true);
            this.setTitle("Tambah Data Pinjam");
        }

        if (memberId.length != 0) {
            this.memberId = memberId[0];
            if (this.memberId != 0) {
                comboMember.setVisible(false);
                labelMember.setVisible(false);
                employeeId = null;
            }
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        labelMember = new javax.swing.JLabel();
        comboMember = new javax.swing.JComboBox<>();
        labelBook = new javax.swing.JLabel();
        comboBook = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(74, 209, 161));

        labelMember.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelMember.setForeground(new java.awt.Color(255, 255, 255));
        labelMember.setText("Peminjam");

        labelBook.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        labelBook.setForeground(new java.awt.Color(255, 255, 255));
        labelBook.setText("Buku");

        jPanel2.setPreferredSize(new java.awt.Dimension(120, 30));
        jPanel2.setLayout(new java.awt.CardLayout());

        btnAdd.setBackground(new java.awt.Color(87, 101, 116));
        btnAdd.setForeground(new java.awt.Color(255, 255, 255));
        btnAdd.setText("Tambah Data");
        btnAdd.setBorderPainted(false);
        btnAdd.setPreferredSize(new java.awt.Dimension(100, 25));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });
        jPanel2.add(btnAdd, "card3");

        btnUpdate.setBackground(new java.awt.Color(87, 101, 116));
        btnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        btnUpdate.setText("Update Data");
        btnUpdate.setBorderPainted(false);
        btnUpdate.setPreferredSize(new java.awt.Dimension(100, 25));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        jPanel2.add(btnUpdate, "card2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(labelMember)
                            .addComponent(labelBook))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(comboMember, 0, 226, Short.MAX_VALUE)
                            .addComponent(comboBook, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboMember, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelMember))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBook, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelBook))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        int iMember = comboMember.getSelectedIndex();
        int iBook = comboBook.getSelectedIndex();
        LocalDate borrowDate = LocalDate.now();
        LocalDate returnDate = LocalDate.now().plusDays(3);
        String sql = "INSERT INTO borrows (employee_id, member_id, book_id, borrow_date, return_date, status) "
                + "VALUES('" + employeeId + "','" + arrMemberId[iMember] + "','" + arrBookId[iBook] + "','" + borrowDate + "','" + returnDate + "','" + 0 + "')";
        if (memberId != 0) {
            sql = "INSERT INTO borrows (member_id, book_id, borrow_date, return_date, status) "
                    + "VALUES('" + memberId + "','" + arrBookId[iBook] + "','" + borrowDate + "','" + returnDate + "','" + 0 + "')";
        }

        try {
            java.sql.Connection conn = (Connection) connection.configDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Penyimpanan Data Berhasil");
            dispose();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        int iMember = comboMember.getSelectedIndex();
        int iBook = comboBook.getSelectedIndex();

        try {
            String sql = "UPDATE borrows SET employee_id='" + employeeId + "',member_id='" + arrMemberId[iMember] + "',book_id='" + arrBookId[iBook] + "'WHERE id='" + id + "'";
            java.sql.Connection conn = (Connection) connection.configDB();
            java.sql.PreparedStatement pst = conn.prepareStatement(sql);
            pst.execute();
            JOptionPane.showMessageDialog(null, "Penyimpanan Data Berhasil");
            dispose();
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_btnUpdateActionPerformed
    public Integer id, employeeId, memberId, bookId;
    public Integer[] arrMemberId, arrBookId;

    public void setArrBookId(Integer[] array) {
        this.arrBookId = Arrays.copyOf(array, array.length);
    }

    public void setArrMemberId(Integer[] array) {
        this.arrMemberId = Arrays.copyOf(array, array.length);
    }

    public static int findIndex(Integer arr[], int t) {
        if (arr == null) {
            return -1;
        }

        int len = arr.length;
        int i = 0;

        while (i < len) {

            if (arr[i] == t) {
                return i;
            } else {
                i = i + 1;
            }
        }
        return -1;
    }

    public void viewData() {
        comboMember.setSelectedIndex(findIndex(arrMemberId, memberId));
        comboBook.setSelectedIndex(findIndex(arrBookId, bookId));
    }

    public void viewComboBox() {
        try {
            java.sql.Connection conn = (Connection) connection.configDB();
            java.sql.Statement stm = conn.createStatement();

            String sql = "SELECT * FROM members";
            java.sql.ResultSet res = stm.executeQuery(sql);
            Set<Integer> p = new HashSet<>();
            while (res.next()) {
                comboMember.addItem(res.getString("id") + " - " + res.getString("name"));
                p.add(res.getInt("id"));
            }
            int n = p.size();
            Integer pArr[] = new Integer[n];
            pArr = p.toArray(pArr);
            setArrMemberId(pArr);

            sql = "SELECT * FROM books";
            res = stm.executeQuery(sql);
            Set<Integer> c = new HashSet<>();
            while (res.next()) {
                comboBook.addItem(res.getString("title"));
                c.add(res.getInt("id"));
            }
            n = c.size();
            Integer cArr[] = new Integer[n];
            cArr = c.toArray(cArr);
            setArrBookId(cArr);
        } catch (SQLException e) {
            System.err.println(e.getMessage());
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formBorrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formBorrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formBorrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formBorrow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> comboBook;
    private javax.swing.JComboBox<String> comboMember;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel labelBook;
    private javax.swing.JLabel labelMember;
    // End of variables declaration//GEN-END:variables
}
